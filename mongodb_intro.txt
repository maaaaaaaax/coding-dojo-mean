To open:
terminal window 1: sudo mongod
terminal window 2: mongo

Commands:

Show all databases:           show dbs
Show current database:        db
Change to another database:   use DB_NAME
Delete database:              db.dropDatabase()
  (will delete current database in use)

View all collections:         show collections
Create a new collection:      db.createCollection("authors")
  (in the current database)
Destroy a collection:         db.ninjas.drop()

Documents:

CREATE - insert a document into a collection:
db.ninjas.insert({name: "Trey", belt: "black", status: "awesome"})

READ - retrieve documents from a collection:
db.ninjas.find({name: "Trey"})
alternately:
db.ninjas.find().pretty()
db.ninjas.find({_id: ObjectId("5462a78e514e258182f4c69a")})

UPDATE
db.ninjas.update({name: "Trey"}, {location: "Mountain View"}) - removes all fields not specified

db.ninjas.update({name: "Trey"}, {$set: {location: "Mountain View"}})

DESTROY
db.ninjas.remove({belt: "yellow"})
db.ninjas.remove({belt: "yellow"}, true) - removes the first result


1. Create a database called 'my_first_db'.
// use my_first_db

2. Create students collection.
// db.createCollection("students")

3. Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
4. Create 5 students with the appropriate info.
// db.students.insert({name: "Max", home_state: "CA", lucky_number: 8, birthday: {month: 8, day: 8, year: 1992}})
// db.students.insert({name: "Victor", home_state: "CA", lucky_number: 0, birthday: {month: 8, day: 8, year: 1992}})
// db.students.insert({name: "Michael", home_state: "CA", lucky_number: 2, birthday: {month: 8, day: 8, year: 1992}})
// db.students.insert({name: "Tejas", home_state: "WA", lucky_number: 3, birthday: {month: 8, day: 8, year: 1992}})
// db.students.insert({name: "Salma", home_state: "OR", lucky_number: 10, birthday: {month: 8, day: 8, year: 1992}})

fix any errors: db.students.update({name: "Tejas"}, {$set: {home_state: "WA"}})


5. Get all students.
// db.students.find({}).pretty()

6. Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
// db.students.find({ $or: [{home_state: "CA"}, {home_state: "WA"}]}).pretty()

7. Get all students whose lucky number is:
  1. greater than 3
  // db.students.find({ lucky_number: {$gt:3} }).pretty()
  2. less than or equal to 10
  // db.students.find({ lucky_number: {$lte:10} }).pretty()
  3. between 1 and 9 (inclusive)
  // db.students.find({ $and: [{lucky_number: {$lte:9}}, {lucky_number: {$gte:1}}] }).pretty()

8. Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
// db.students.updateMany({}, {$set: {interests: ["coding", "brunch", "MongoDB"]}})

9. Add some unique interests for each particular student into each of their interest arrays.
// db.students.update({_id: ObjectId("5acbcca7decf1f6fff577362")}, {$push: {interests: 'skydiving'}})

10. Add the interest 'taxes' into someone's interest array.
// db.students.update({_id: ObjectId("5acbcb80decf1f6fff577361")}, {$push: {interests: 'taxes'}})

11. Remove the 'taxes' interest you just added.
// db.students.update({_id: ObjectId("5acbcb80decf1f6fff577361")}, {$pull: {interests: 'taxes'}})

12. Remove all students who are from California (or Washington).
// db.students.remove({home_state: "WA"})

13. Remove a student by name.
// db.students.remove({name: "Salma"})

14. Remove a student whose lucky number is greater than 5 (JUST ONE)
// db.students.remove( { lucky_number: { $gt: 5 } }, true )

15. Add a field to each student collection called 'number_of_belts' and set it to 0.
// db.students.updateMany({}, {$set: {belts: 0}})

16. Increment this field by 1 for all students in Washington (Seattle Dojo).
// db.students.updateMany({home_state: "WA"}, {$inc: {belts: 1}})

17. Rename the 'number_of_belts' field to 'belts_earned'
// db.students.updateMany({}, {$rename: {'belts':'belts_earned'}})

18. Remove the 'lucky_number' field.
// db.students.updateMany({}, {$unset: {'lucky_number':''}})

19. Add a 'updated_on' field, and set the value as the current date.
// db.students.updateMany({}, {$set: {'updated_on': Date()}})
